Б1.В6 Функциональное программирование
Дисциплина «Функциональное программирование» (Б1.В6) входит в часть, формируемую участниками образовательных отношений блока Б1 «Дисциплины (модули)». Изучение курса связано с дисциплинами: «Языки программирования», «Логическое программирование». Знания, умения и навыки, полученные в ходе изучения дисциплины, являются необходимыми для изучения дисциплин: «Интеллектуальные системы», «Конструирование программного обеспечения» и др. Раздел 1. ОСНОВНЫЕ ПОНЯТИЯ И ЭЛЕМЕНТАРНЫЕ ФУНКЦИИ Особенности функционального программирования. Основные понятия и синтаксис языка Лисп Программирование в функциональных обозначениях. Сравнение с операторным программированием. Психологические трудности при переходе к функциональному программированию. Различные диалекты и общие принципы работы Лисп-систем. Области применения языка Лисп. Атомы, списки и S-выражения. Форматы функций. Единообразная префиксная форма записи выражений и функций. Интерпретация элементов списка. Иерархия вызовов функций. Блокировка вычисления S-выражений. Функция QUOTE. Базовые функции обработки списков. Значение символа Базовые функции: CAR, CDR, CONS, ATOM и EQ. Модификации функции EQ. Связь между селекторами и конструктором. Возможность доступа к произвольному элементу списка. Сокращенная запись комбинаций функций CAR и CDR. Понятие списочной ячейки. Внутреннее представление списков. Логическое и физическое равенство списков. Запись списка в точечной нотации и обратное преобразование. Связывание символа со значением. Функции SET и SETQ. Понятие псевдофункций. Лямбда-функции. Определение именованных функций. Условные и логические функции. Форма записи функций в лямбда-исчислении Чёрча. Определение лямбда-выражения. Определение и вычисление лямбда-вызова. Объединение лямбда-вызовов. Определение функций пользователя через функцию DEFUN. Встроенные функции управления вычислениями. Формы LET и LET*, COND и IF, PROGN, PROG1, PROG2. Логические функции OR, AND и NOT. Форматы вызовов и правила вычисления результата. Раздел 2. СРЕДСТВА И МЕТОДЫ ЭФФЕКТИВНОГО ФУНКЦИОНАЛЬНОГО ПРОГРАММИРОВАНИЯ Рекурсивные функции и приемы программирования Простая рекурсия. Примеры проектирования программ. Правила конструирования рекурсивных функций. Приемы программирования: использование вспомогательных функций, накапливающих параметров и локальных определений. Рекурсия по значению и по аргументу. Другие формы рекурсии: параллельная, взаимная и рекурсия более высокого порядка.  Функции высших порядков Понятие функций высших порядков. Определение функционала, функционального аргумента, функции с функциональным значением. Реализация функций высших порядков в языке Лисп. Встроенные применяющие и отображающие функционалы: APPLY, FUNCALL, MAPCAR MAPLIST. Определение функционалов пользователя. Использование применяющих функционалов в программировании, управляемом. Макросы и структуры Синтаксис определения макроса. Вызов макроса. Отличие вычисления вызова макроса от вычисления вызова функции. Тестирование макросов (форма MACROEXPAND). Использование обратной блокировки для более удобного способа создания макроса. Создание новых синтаксических форм и реализация интерпретатора для нового языка с помощью макросов. Рекурсивные макросы. Определение структурного типа. Создание объекта структурного типа. Функция доступа к полям. Операции с объектами структурного типа. Функциональные эквиваленты императивных программ Соответствие между функциональными и императивными программами. Способы преобразования императивных программ в функциональные. Аппаратное обеспечение функциональных программ. Раздел 1. ОСНОВНЫЕ ПОНЯТИЯ И ЭЛЕМЕНТАРНЫЕ ФУНКЦИИ Особенности функционального программирования. Основные понятия и синтаксис языка Лисп Префиксная форма записи математических функций.  Запись S-выражений в обычной математической форме. Перевод математических выражений в форму языка Лисп. Базовые функции обработки списков. Значение символа Обработка списков базовыми функциями: car, cdr, cons, atom, eq.. Выделение элементов списков комбинациями базовых функций Car и Cdr. Конструирование новых списков функцией Cons. Лямбда-функции. Определение именованных функций. Условные и логические функции. Определение функций без имени и с помощью функции DEFUN.. Определение лямбда-функций и простейших функций с именем, используя условные формы и логические функции. Раздел 2. СРЕДСТВА И МЕТОДЫ ЭФФЕКТИВНОГО ФУНКЦИОНАЛЬНОГО ПРОГРАММИРОВАНИЯ Рекурсивные функции и приемы программирования Определение простых рекурсивных функций обработки списков.  Определение функций со сложной формой  рекурсии.  Проектирование, составление определений и тестирование простых рекурсивных функций.    Проектирование, составление определений и тестирование функций с параллельной, взаимной и более высокого порядка рекурсией. Функции высших порядков Создание пользовательского функционала. Определение функций высшего порядка с использованием встроенных функционалов. Макросы и структуры Программирование с помощью объектов структурного типа.  Разработка главной программы и вспомогательных программ обработки объектов типа структура. Функциональные эквиваленты императивных программ Создание функционального эквивалента императивной программы методом блок-схем. Формальный вывод функциональной программы по построенной блок-схеме императивной программы. 
